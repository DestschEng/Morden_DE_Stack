>> ATTEMPT 1/1

2024-07-27 02:39:57 [46mplatform[0m > Docker volume job log path: /tmp/workspace/1/0/logs.log
2024-07-27 02:39:57 [46mplatform[0m > Executing worker wrapper. Airbyte version: 0.60.0
2024-07-27 02:39:57 [46mplatform[0m > Attempt 0 to save workflow id for cancellation
2024-07-27 02:39:57 [46mplatform[0m > 
2024-07-27 02:39:57 [46mplatform[0m > ----- START CHECK -----
2024-07-27 02:39:57 [46mplatform[0m > 
2024-07-27 02:39:57 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:39:57 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:39:57 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:39:57 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:39:57 [46mplatform[0m > Checking if airbyte/source-s3:4.5.14 exists...
2024-07-27 02:39:57 [46mplatform[0m > airbyte/source-s3:4.5.14 was found locally.
2024-07-27 02:39:57 [46mplatform[0m > Creating docker container = source-s3-check-1-0-wajlw with resources io.airbyte.config.ResourceRequirements@3e0b4bda[cpuRequest=,cpuLimit=,memoryRequest=,memoryLimit=,additionalProperties={}] and allowedHosts io.airbyte.config.AllowedHosts@ac7c4da[hosts=[*.s3.amazonaws.com, *.datadoghq.com, *.datadoghq.eu, *.sentry.io],additionalProperties={}]
2024-07-27 02:39:57 [46mplatform[0m > Preparing command: docker run --rm --init -i -w /data/1/0 --log-driver none --name source-s3-check-1-0-wajlw --network host -v airbyte_workspace:/data -v oss_local_root:/local -e DEPLOYMENT_MODE=OSS -e WORKER_CONNECTOR_IMAGE=airbyte/source-s3:4.5.14 -e AUTO_DETECT_SCHEMA=true -e LAUNCHDARKLY_KEY= -e SOCAT_KUBE_CPU_REQUEST=0.1 -e SOCAT_KUBE_CPU_LIMIT=2.0 -e FIELD_SELECTION_WORKSPACES= -e USE_STREAM_CAPABLE_STATE=true -e AIRBYTE_ROLE=dev -e WORKER_ENVIRONMENT=DOCKER -e APPLY_FIELD_SELECTION=false -e WORKER_JOB_ATTEMPT=0 -e OTEL_COLLECTOR_ENDPOINT=http://host.docker.internal:4317 -e FEATURE_FLAG_CLIENT=config -e AIRBYTE_VERSION=0.60.0 -e WORKER_JOB_ID=1 airbyte/source-s3:4.5.14 check --config source_config.json
2024-07-27 02:39:57 [46mplatform[0m > Reading messages from protocol version 0.2.0
2024-07-27 02:40:04 [46mplatform[0m > Received 3 objects from S3 for prefix 'None'.
2024-07-27 02:40:27 [46mplatform[0m > Check succeeded
2024-07-27 02:40:27 [46mplatform[0m > Check connection job received output: io.airbyte.config.StandardCheckConnectionOutput@898d96c[status=succeeded,message=<null>,additionalProperties={}]
2024-07-27 02:40:27 [46mplatform[0m > 
2024-07-27 02:40:27 [46mplatform[0m > ----- END CHECK -----
2024-07-27 02:40:27 [46mplatform[0m > 
2024-07-27 02:40:28 [46mplatform[0m > Docker volume job log path: /tmp/workspace/1/0/logs.log
2024-07-27 02:40:28 [46mplatform[0m > Executing worker wrapper. Airbyte version: 0.60.0
2024-07-27 02:40:28 [46mplatform[0m > Attempt 0 to save workflow id for cancellation
2024-07-27 02:40:28 [46mplatform[0m > 
2024-07-27 02:40:28 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:40:28 [46mplatform[0m > ----- START CHECK -----
2024-07-27 02:40:28 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:40:28 [46mplatform[0m > 
2024-07-27 02:40:28 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:40:28 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:40:28 [46mplatform[0m > Checking if airbyte/destination-postgres:2.0.10 exists...
2024-07-27 02:40:28 [46mplatform[0m > airbyte/destination-postgres:2.0.10 was found locally.
2024-07-27 02:40:28 [46mplatform[0m > Creating docker container = destination-postgres-check-1-0-szkuo with resources io.airbyte.config.ResourceRequirements@50da4c06[cpuRequest=,cpuLimit=,memoryRequest=,memoryLimit=,additionalProperties={}] and allowedHosts null
2024-07-27 02:40:28 [46mplatform[0m > Preparing command: docker run --rm --init -i -w /data/1/0 --log-driver none --name destination-postgres-check-1-0-szkuo --network host -v airbyte_workspace:/data -v oss_local_root:/local -e DEPLOYMENT_MODE=OSS -e WORKER_CONNECTOR_IMAGE=airbyte/destination-postgres:2.0.10 -e AUTO_DETECT_SCHEMA=true -e LAUNCHDARKLY_KEY= -e SOCAT_KUBE_CPU_REQUEST=0.1 -e SOCAT_KUBE_CPU_LIMIT=2.0 -e FIELD_SELECTION_WORKSPACES= -e USE_STREAM_CAPABLE_STATE=true -e AIRBYTE_ROLE=dev -e WORKER_ENVIRONMENT=DOCKER -e APPLY_FIELD_SELECTION=false -e WORKER_JOB_ATTEMPT=0 -e OTEL_COLLECTOR_ENDPOINT=http://host.docker.internal:4317 -e FEATURE_FLAG_CLIENT=config -e AIRBYTE_VERSION=0.60.0 -e WORKER_JOB_ID=1 airbyte/destination-postgres:2.0.10 check --config source_config.json
2024-07-27 02:40:28 [46mplatform[0m > Reading messages from protocol version 0.2.0
2024-07-27 02:40:29 [46mplatform[0m > INFO main i.a.i.d.p.PostgresDestination(main):169 starting destination: class io.airbyte.integrations.destination.postgres.PostgresDestination
2024-07-27 02:40:29 [46mplatform[0m > INFO main i.a.c.i.b.IntegrationCliParser$Companion(parseOptions):145 integration args: {check=null, config=source_config.json}
2024-07-27 02:40:29 [46mplatform[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):124 Running integration: io.airbyte.cdk.integrations.base.ssh.SshWrappedDestination
2024-07-27 02:40:29 [46mplatform[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):125 Command: CHECK
2024-07-27 02:40:29 [46mplatform[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):126 Integration config: IntegrationConfig{command=CHECK, configPath='source_config.json', catalogPath='null', statePath='null'}
2024-07-27 02:40:29 [46mplatform[0m > WARN main c.n.s.JsonMetaSchema(newValidator):278 Unknown keyword order - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword
2024-07-27 02:40:29 [46mplatform[0m > WARN main c.n.s.JsonMetaSchema(newValidator):278 Unknown keyword airbyte_secret - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword
2024-07-27 02:40:29 [46mplatform[0m > INFO main i.a.c.i.b.s.SshTunnel$Companion(getInstance):428 Starting connection with method: NO_TUNNEL
2024-07-27 02:40:29 [46mplatform[0m > INFO main c.z.h.HikariDataSource(<init>):79 HikariPool-1 - Starting...
2024-07-27 02:40:29 [46mplatform[0m > INFO main c.z.h.HikariDataSource(<init>):81 HikariPool-1 - Start completed.
2024-07-27 02:40:30 [46mplatform[0m > INFO main c.z.h.HikariDataSource(close):349 HikariPool-1 - Shutdown initiated...
2024-07-27 02:40:30 [46mplatform[0m > INFO main c.z.h.HikariDataSource(close):351 HikariPool-1 - Shutdown completed.
2024-07-27 02:40:30 [46mplatform[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):251 Completed integration: io.airbyte.cdk.integrations.base.ssh.SshWrappedDestination
2024-07-27 02:40:30 [46mplatform[0m > INFO main i.a.i.d.p.PostgresDestination(main):171 completed destination: class io.airbyte.integrations.destination.postgres.PostgresDestination
2024-07-27 02:40:30 [46mplatform[0m > Check connection job received output: io.airbyte.config.StandardCheckConnectionOutput@25fcb476[status=succeeded,message=<null>,additionalProperties={}]
2024-07-27 02:40:30 [46mplatform[0m > 
2024-07-27 02:40:30 [46mplatform[0m > ----- END CHECK -----
2024-07-27 02:40:30 [46mplatform[0m > 
2024-07-27 02:40:31 [46mplatform[0m > Docker volume job log path: /tmp/workspace/1/0/logs.log
2024-07-27 02:40:31 [46mplatform[0m > Executing worker wrapper. Airbyte version: 0.60.0
2024-07-27 02:40:31 [46mplatform[0m > Attempt 0 to save workflow id for cancellation
2024-07-27 02:40:31 [46mplatform[0m > start sync worker. job id: 1 attempt id: 0
2024-07-27 02:40:31 [46mplatform[0m > 
2024-07-27 02:40:31 [46mplatform[0m > ----- START REPLICATION -----
2024-07-27 02:40:31 [46mplatform[0m > 
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:40:31 [46mplatform[0m > Checking if airbyte/source-s3:4.5.14 exists...
2024-07-27 02:40:31 [46mplatform[0m > Running destination...
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_LIMIT: '2.0'
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SIDECAR_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:40:31 [46mplatform[0m > Using default value for environment variable SOCAT_KUBE_CPU_REQUEST: '0.1'
2024-07-27 02:40:31 [46mplatform[0m > Checking if airbyte/destination-postgres:2.0.10 exists...
2024-07-27 02:40:31 [46mplatform[0m > airbyte/source-s3:4.5.14 was found locally.
2024-07-27 02:40:31 [46mplatform[0m > Creating docker container = source-s3-read-1-0-tchjt with resources io.airbyte.config.ResourceRequirements@5bda7e00[cpuRequest=0.5,cpuLimit=1,memoryRequest=1Gi,memoryLimit=2Gi,additionalProperties={}] and allowedHosts io.airbyte.config.AllowedHosts@5064a759[hosts=[*.s3.amazonaws.com, *.datadoghq.com, *.datadoghq.eu, *.sentry.io],additionalProperties={}]
2024-07-27 02:40:31 [46mplatform[0m > Preparing command: docker run --rm --init -i -w /data/1/0 --log-driver none --name source-s3-read-1-0-tchjt -e CONCURRENT_SOURCE_STREAM_READ=false --network host -v airbyte_workspace:/data -v oss_local_root:/local -e DEPLOYMENT_MODE=OSS -e WORKER_CONNECTOR_IMAGE=airbyte/source-s3:4.5.14 -e AUTO_DETECT_SCHEMA=true -e LAUNCHDARKLY_KEY= -e SOCAT_KUBE_CPU_REQUEST=0.1 -e SOCAT_KUBE_CPU_LIMIT=2.0 -e FIELD_SELECTION_WORKSPACES= -e USE_STREAM_CAPABLE_STATE=true -e AIRBYTE_ROLE=dev -e WORKER_ENVIRONMENT=DOCKER -e APPLY_FIELD_SELECTION=false -e WORKER_JOB_ATTEMPT=0 -e OTEL_COLLECTOR_ENDPOINT=http://host.docker.internal:4317 -e FEATURE_FLAG_CLIENT=config -e AIRBYTE_VERSION=0.60.0 -e WORKER_JOB_ID=1 --cpus=1 --memory-reservation=1Gi --memory=2Gi airbyte/source-s3:4.5.14 read --config source_config.json --catalog source_catalog.json
2024-07-27 02:40:31 [46mplatform[0m > Reading messages from protocol version 0.2.0
2024-07-27 02:40:31 [46mplatform[0m > airbyte/destination-postgres:2.0.10 was found locally.
2024-07-27 02:40:31 [46mplatform[0m > Creating docker container = destination-postgres-write-1-0-ncekq with resources io.airbyte.config.ResourceRequirements@2d22a7c3[cpuRequest=0.5,cpuLimit=1,memoryRequest=1Gi,memoryLimit=2Gi,additionalProperties={}] and allowedHosts null
2024-07-27 02:40:31 [46mplatform[0m > Preparing command: docker run --rm --init -i -w /data/1/0 --log-driver none --name destination-postgres-write-1-0-ncekq --network host -v airbyte_workspace:/data -v oss_local_root:/local -e DEPLOYMENT_MODE=OSS -e WORKER_CONNECTOR_IMAGE=airbyte/destination-postgres:2.0.10 -e AUTO_DETECT_SCHEMA=true -e LAUNCHDARKLY_KEY= -e SOCAT_KUBE_CPU_REQUEST=0.1 -e SOCAT_KUBE_CPU_LIMIT=2.0 -e FIELD_SELECTION_WORKSPACES= -e USE_STREAM_CAPABLE_STATE=true -e AIRBYTE_ROLE=dev -e WORKER_ENVIRONMENT=DOCKER -e APPLY_FIELD_SELECTION=false -e WORKER_JOB_ATTEMPT=0 -e OTEL_COLLECTOR_ENDPOINT=http://host.docker.internal:4317 -e FEATURE_FLAG_CLIENT=config -e AIRBYTE_VERSION=0.60.0 -e WORKER_JOB_ID=1 --cpus=1 --memory-reservation=1Gi --memory=2Gi airbyte/destination-postgres:2.0.10 write --config destination_config.json --catalog destination_catalog.json
2024-07-27 02:40:31 [46mplatform[0m > Writing messages to protocol version 0.2.0
2024-07-27 02:40:31 [46mplatform[0m > Reading messages from protocol version 0.2.0
2024-07-27 02:40:31 [46mplatform[0m > readFromSource: start
2024-07-27 02:40:31 [46mplatform[0m > Starting source heartbeat check. Will check threshold of 10800 seconds, every 1 minutes.
2024-07-27 02:40:31 [46mplatform[0m > processMessage: start
2024-07-27 02:40:31 [46mplatform[0m > writeToDestination: start
2024-07-27 02:40:31 [46mplatform[0m > readFromDestination: start
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.i.d.p.PostgresDestination(main):169 starting destination: class io.airbyte.integrations.destination.postgres.PostgresDestination
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationCliParser$Companion(parseOptions):145 integration args: {catalog=destination_catalog.json, write=null, config=destination_config.json}
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):124 Running integration: io.airbyte.cdk.integrations.base.ssh.SshWrappedDestination
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):125 Command: WRITE
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):126 Integration config: IntegrationConfig{command=WRITE, configPath='destination_config.json', catalogPath='destination_catalog.json', statePath='null'}
2024-07-27 02:40:34 [43mdestination[0m > WARN main c.n.s.JsonMetaSchema(newValidator):278 Unknown keyword order - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword
2024-07-27 02:40:34 [43mdestination[0m > WARN main c.n.s.JsonMetaSchema(newValidator):278 Unknown keyword airbyte_secret - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.c.i.b.s.SshWrappedDestination(getSerializedMessageConsumer):113 No SSH connection options found, using defaults
2024-07-27 02:40:34 [43mdestination[0m > INFO main i.a.c.i.b.s.SshTunnel$Companion(getInstance):428 Starting connection with method: NO_TUNNEL
2024-07-27 02:40:34 [43mdestination[0m > INFO main c.z.h.HikariDataSource(<init>):79 HikariPool-1 - Starting...
2024-07-27 02:40:34 [43mdestination[0m > INFO main c.z.h.HikariDataSource(<init>):81 HikariPool-1 - Start completed.
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.i.b.d.t.CatalogParser(parseCatalog):109 Running sync with stream configs: [StreamConfig(id=StreamId(finalNamespace=public, finalName=Minio_Source, rawNamespace=airbyte_internal, rawName=public_raw__stream_minio_source, originalNamespace=public, originalName=Minio_Source), syncMode=full_refresh, destinationSyncMode=append, primaryKey=[], cursor=Optional[ColumnId(name=_ab_source_file_last_modified, originalName=_ab_source_file_last_modified, canonicalName=_ab_source_file_last_modified)], columns={ColumnId(name=CIK, originalName=CIK, canonicalName=CIK)=INTEGER, ColumnId(name=Low, originalName=Low, canonicalName=Low)=NUMBER, ColumnId(name=ask, originalName=ask, canonicalName=ask)=NUMBER, ColumnId(name=bid, originalName=bid, canonicalName=bid)=NUMBER, ColumnId(name=High, originalName=High, canonicalName=High)=NUMBER, ColumnId(name=Open, originalName=Open, canonicalName=Open)=NUMBER, ColumnId(name=beta, originalName=beta, canonicalName=beta)=NUMBER, ColumnId(name=open, originalName=open, canonicalName=open)=NUMBER, ColumnId(name=Close, originalName=Close, canonicalName=Close)=NUMBER, ColumnId(name=Symbol, originalName=Symbol, canonicalName=Symbol)=STRING, ColumnId(name=Volume, originalName=Volume, canonicalName=Volume)=INTEGER, ColumnId(name=dayLow, originalName=dayLow, canonicalName=dayLow)=NUMBER, ColumnId(name=ebitda, originalName=ebitda, canonicalName=ebitda)=NUMBER, ColumnId(name=ticker, originalName=ticker, canonicalName=ticker)=STRING, ColumnId(name=volume, originalName=volume, canonicalName=volume)=INTEGER, ColumnId(name=Founded, originalName=Founded, canonicalName=Founded)=STRING, ColumnId(name=dayHigh, originalName=dayHigh, canonicalName=dayHigh)=NUMBER, ColumnId(name=Security, originalName=Security, canonicalName=Security)=STRING, ColumnId(name=currency, originalName=currency, canonicalName=currency)=STRING, ColumnId(name=pegRatio, originalName=pegRatio, canonicalName=pegRatio)=NUMBER, ColumnId(name=Adj_Close, originalName=Adj Close, canonicalName=Adj_Close)=NUMBER, ColumnId(name=bookValue, originalName=bookValue, canonicalName=bookValue)=NUMBER, ColumnId(name=forwardPE, originalName=forwardPE, canonicalName=forwardPE)=NUMBER, ColumnId(name=marketCap, originalName=marketCap, canonicalName=marketCap)=INTEGER, ColumnId(name=totalCash, originalName=totalCash, canonicalName=totalCash)=NUMBER, ColumnId(name=totalDebt, originalName=totalDebt, canonicalName=totalDebt)=NUMBER, ColumnId(name=Date_added, originalName=Date added, canonicalName=Date_added)=STRING, ColumnId(name=forwardEps, originalName=forwardEps, canonicalName=forwardEps)=NUMBER, ColumnId(name=quickRatio, originalName=quickRatio, canonicalName=quickRatio)=NUMBER, ColumnId(name=shortRatio, originalName=shortRatio, canonicalName=shortRatio)=NUMBER, ColumnId(name=trailingPE, originalName=trailingPE, canonicalName=trailingPE)=NUMBER, ColumnId(name=GICS_Sector, originalName=GICS Sector, canonicalName=GICS_Sector)=STRING, ColumnId(name=floatShares, originalName=floatShares, canonicalName=floatShares)=INTEGER, ColumnId(name=payoutRatio, originalName=payoutRatio, canonicalName=payoutRatio)=NUMBER, ColumnId(name=priceToBook, originalName=priceToBook, canonicalName=priceToBook)=NUMBER, ColumnId(name=sharesShort, originalName=sharesShort, canonicalName=sharesShort)=NUMBER, ColumnId(name=trailingEps, originalName=trailingEps, canonicalName=trailingEps)=NUMBER, ColumnId(name=52WeekChange, originalName=52WeekChange, canonicalName=52WeekChange)=NUMBER, ColumnId(name=AsOfDataTime, originalName=AsOfDataTime, canonicalName=AsOfDataTime)=TIMESTAMP_WITH_TIMEZONE, ColumnId(name=currentPrice, originalName=currentPrice, canonicalName=currentPrice)=NUMBER, ColumnId(name=currentRatio, originalName=currentRatio, canonicalName=currentRatio)=NUMBER, ColumnId(name=debtToEquity, originalName=debtToEquity, canonicalName=debtToEquity)=NUMBER, ColumnId(name=dividendRate, originalName=dividendRate, canonicalName=dividendRate)=NUMBER, ColumnId(name=freeCashflow, originalName=freeCashflow, canonicalName=freeCashflow)=NUMBER, ColumnId(name=grossMargins, originalName=grossMargins, canonicalName=grossMargins)=NUMBER, ColumnId(name=totalRevenue, originalName=totalRevenue, canonicalName=totalRevenue)=INTEGER, ColumnId(name=averageVolume, originalName=averageVolume, canonicalName=averageVolume)=INTEGER, ColumnId(name=dividendYield, originalName=dividendYield, canonicalName=dividendYield)=NUMBER, ColumnId(name=ebitdaMargins, originalName=ebitdaMargins, canonicalName=ebitdaMargins)=NUMBER, ColumnId(name=previousClose, originalName=previousClose, canonicalName=previousClose)=NUMBER, ColumnId(name=profitMargins, originalName=profitMargins, canonicalName=profitMargins)=NUMBER, ColumnId(name=revenueGrowth, originalName=revenueGrowth, canonicalName=revenueGrowth)=NUMBER, ColumnId(name=earningsGrowth, originalName=earningsGrowth, canonicalName=earningsGrowth)=NUMBER, ColumnId(name=returnOnAssets, originalName=returnOnAssets, canonicalName=returnOnAssets)=NUMBER, ColumnId(name=returnOnEquity, originalName=returnOnEquity, canonicalName=returnOnEquity)=NUMBER, ColumnId(name=targetLowPrice, originalName=targetLowPrice, canonicalName=targetLowPrice)=NUMBER, ColumnId(name=enterpriseValue, originalName=enterpriseValue, canonicalName=enterpriseValue)=NUMBER, ColumnId(name=fiftyDayAverage, originalName=fiftyDayAverage, canonicalName=fiftyDayAverage)=NUMBER, ColumnId(name=fiftyTwoWeekLow, originalName=fiftyTwoWeekLow, canonicalName=fiftyTwoWeekLow)=NUMBER, ColumnId(name=revenuePerShare, originalName=revenuePerShare, canonicalName=revenuePerShare)=NUMBER, ColumnId(name=targetHighPrice, originalName=targetHighPrice, canonicalName=targetHighPrice)=NUMBER, ColumnId(name=targetMeanPrice, originalName=targetMeanPrice, canonicalName=targetMeanPrice)=NUMBER, ColumnId(name=fiftyTwoWeekHigh, originalName=fiftyTwoWeekHigh, canonicalName=fiftyTwoWeekHigh)=NUMBER, ColumnId(name=lastDividendDate, originalName=lastDividendDate, canonicalName=lastDividendDate)=NUMBER, ColumnId(name=operatingMargins, originalName=operatingMargins, canonicalName=operatingMargins)=NUMBER, ColumnId(name=trailingPegRatio, originalName=trailingPegRatio, canonicalName=trailingPegRatio)=NUMBER, ColumnId(name=GICS_Sub_Industry, originalName=GICS Sub-Industry, canonicalName=GICS_Sub_Industry)=STRING, ColumnId(name=SandP52WeekChange, originalName=SandP52WeekChange, canonicalName=SandP52WeekChange)=NUMBER, ColumnId(name=lastDividendValue, originalName=lastDividendValue, canonicalName=lastDividendValue)=NUMBER, ColumnId(name=netIncomeToCommon, originalName=netIncomeToCommon, canonicalName=netIncomeToCommon)=INTEGER, ColumnId(name=operatingCashflow, originalName=operatingCashflow, canonicalName=operatingCashflow)=NUMBER, ColumnId(name=regularMarketOpen, originalName=regularMarketOpen, canonicalName=regularMarketOpen)=NUMBER, ColumnId(name=sharesOutstanding, originalName=sharesOutstanding, canonicalName=sharesOutstanding)=INTEGER, ColumnId(name=targetMedianPrice, originalName=targetMedianPrice, canonicalName=targetMedianPrice)=NUMBER, ColumnId(name=totalCashPerShare, originalName=totalCashPerShare, canonicalName=totalCashPerShare)=NUMBER, ColumnId(name=enterpriseToEbitda, originalName=enterpriseToEbitda, canonicalName=enterpriseToEbitda)=NUMBER, ColumnId(name=recommendationMean, originalName=recommendationMean, canonicalName=recommendationMean)=NUMBER, ColumnId(name=_ab_source_file_url, originalName=_ab_source_file_url, canonicalName=_ab_source_file_url)=STRING, ColumnId(name=averageVolume10days, originalName=averageVolume10days, canonicalName=averageVolume10days)=INTEGER, ColumnId(name=enterpriseToRevenue, originalName=enterpriseToRevenue, canonicalName=enterpriseToRevenue)=NUMBER, ColumnId(name=heldPercentInsiders, originalName=heldPercentInsiders, canonicalName=heldPercentInsiders)=NUMBER, ColumnId(name=regularMarketDayLow, originalName=regularMarketDayLow, canonicalName=regularMarketDayLow)=NUMBER, ColumnId(name=regularMarketVolume, originalName=regularMarketVolume, canonicalName=regularMarketVolume)=INTEGER, ColumnId(name=shortPercentOfFloat, originalName=shortPercentOfFloat, canonicalName=shortPercentOfFloat)=NUMBER, ColumnId(name=regularMarketDayHigh, originalName=regularMarketDayHigh, canonicalName=regularMarketDayHigh)=NUMBER, ColumnId(name=twoHundredDayAverage, originalName=twoHundredDayAverage, canonicalName=twoHundredDayAverage)=NUMBER, ColumnId(name=Headquarters_Location, originalName=Headquarters Location, canonicalName=Headquarters_Location)=STRING, ColumnId(name=sharesShortPriorMonth, originalName=sharesShortPriorMonth, canonicalName=sharesShortPriorMonth)=NUMBER, ColumnId(name=sharesPercentSharesOut, originalName=sharesPercentSharesOut, canonicalName=sharesPercentSharesOut)=NUMBER, ColumnId(name=averageDailyVolume10Day, originalName=averageDailyVolume10Day, canonicalName=averageDailyVolume10Day)=INTEGER, ColumnId(name=earningsQuarterlyGrowth, originalName=earningsQuarterlyGrowth, canonicalName=earningsQuarterlyGrowth)=NUMBER, ColumnId(name=heldPercentInstitutions, originalName=heldPercentInstitutions, canonicalName=heldPercentInstitutions)=NUMBER, ColumnId(name=regularMarketPreviousClose, originalName=regularMarketPreviousClose, canonicalName=regularMarketPreviousClose)=NUMBER, ColumnId(name=trailingAnnualDividendRate, originalName=trailingAnnualDividendRate, canonicalName=trailingAnnualDividendRate)=NUMBER, ColumnId(name=trailingAnnualDividendYield, originalName=trailingAnnualDividendYield, canonicalName=trailingAnnualDividendYield)=NUMBER, ColumnId(name=priceToSalesTrailing12Months, originalName=priceToSalesTrailing12Months, canonicalName=priceToSalesTrailing12Months)=NUMBER, ColumnId(name=_ab_source_file_last_modified, originalName=_ab_source_file_last_modified, canonicalName=_ab_source_file_last_modified)=STRING})]
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.a.b.BufferManager(<init>):43 Max 'memory' available for buffer allocation 296 MB
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner$Companion(consumeWriteStream$io_airbyte_airbyte_cdk_java_airbyte_cdk_airbyte_cdk_core):407 Starting buffered read of input stream
2024-07-27 02:40:35 [43mdestination[0m > INFO pool-3-thread-1 i.a.c.i.d.a.b.BufferManager(printQueueInfo):89 [ASYNC QUEUE INFO] Global: max: 296.96 MB, allocated: 10 MB (10.0 MB), %% used: 0.03367428551701215 | State Manager memory usage: Allocated: 10 MB, Used: 0 bytes, percentage Used 0.0
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(start):74 Start async buffer supervisor
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.a.AsyncStreamConsumer(start):112 class io.airbyte.cdk.integrations.destination.async.AsyncStreamConsumer started.
2024-07-27 02:40:35 [43mdestination[0m > INFO pool-6-thread-1 i.a.c.i.d.a.FlushWorkers(printWorkerInfo):128 [ASYNC WORKER INFO] Pool queue size: 0, Active threads: 0
2024-07-27 02:40:35 [43mdestination[0m > INFO main o.j.t.JooqLogger(lambda$info$5):355 
                                      
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@  @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@
@@@@@@@@@@@@@@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@  @@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@        @@  @  @  @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Thank you for using jOOQ 3.16.23 (Build date: 2023-12-20T14:13:48Z)
                                      
2024-07-27 02:40:35 [43mdestination[0m > INFO main o.j.t.JooqLogger(lambda$info$5):355 

jOOQ tip of the day: jOOQ works even better in kotlin! https://blog.jooq.org/10-nice-examples-of-writing-sql-in-kotlin-with-jooq/

2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):171 Executing sql 47710d5a-3b75-4936-b3a7-2ba41d92181f-70baff62-7ae4-46ff-91a1-6f1d10c3dc3d: create schema if not exists "airbyte_internal";
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):186 Sql 47710d5a-3b75-4936-b3a7-2ba41d92181f-70baff62-7ae4-46ff-91a1-6f1d10c3dc3d completed in 429 ms
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):171 Executing sql 47710d5a-3b75-4936-b3a7-2ba41d92181f-b8b7a917-d747-4142-bfab-3cc1d2abe232: create schema if not exists "public";
2024-07-27 02:40:35 [43mdestination[0m > INFO main i.a.c.i.d.j.t.JdbcDestinationHandler(execute):186 Sql 47710d5a-3b75-4936-b3a7-2ba41d92181f-b8b7a917-d747-4142-bfab-3cc1d2abe232 completed in 1 ms
2024-07-27 02:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(migrateIfNecessary):19 Assessing whether migration is necessary for stream Minio_Source
2024-07-27 02:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(shouldMigrate):44 Checking whether v1 raw table _airbyte_raw_minio_source in dataset public exists
2024-07-27 02:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):535 Retrieving existing columns for stock.airbyte_internal.public_raw__stream_minio_source
2024-07-27 02:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):535 Retrieving existing columns for stock.public._airbyte_raw_minio_source
2024-07-27 02:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(shouldMigrate):54 Migration Info: Required for Sync mode: true, No existing v2 raw tables: true, A v1 raw table exists: false
2024-07-27 02:40:35 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.BaseDestinationV1V2Migrator(migrateIfNecessary):31 No Migration Required for stream: Minio_Source
2024-07-27 02:40:36 [43mdestination[0m > INFO Thread-0 i.a.c.d.j.DefaultJdbcDatabase(unsafeQuery$lambda$6):128 closing connection
2024-07-27 02:40:36 [43mdestination[0m > INFO Thread-0 i.a.c.i.d.j.t.JdbcDestinationHandler$Companion(findExistingTable$lambda$1):535 Retrieving existing columns for stock.public.Minio_Source
2024-07-27 02:40:36 [43mdestination[0m > INFO Thread-0 i.a.c.i.d.j.t.JdbcDestinationHandler(getInitialRawTableState$lambda$1):88 Retrieving table from Db metadata: stock airbyte_internal public_raw__stream_minio_source
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.TyperDeduperUtil$Companion(runMigrationsAsync$lambda$13):178 Maybe executing PostgresRawTableAirbyteMetaMigration migration for stream public.Minio_Source.
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.d.p.t.PostgresRawTableAirbyteMetaMigration(migrateIfNecessary):36 Skipping RawTableAirbyteMetaMigration for public.Minio_Source because the raw table doesn't exist
2024-07-27 02:40:36 [43mdestination[0m > INFO main i.a.c.i.d.j.JdbcBufferedConsumerFactory(onStartFunction$lambda$2):238 Preparing raw tables in destination started for 1 streams
2024-07-27 02:40:36 [43mdestination[0m > INFO main i.a.c.i.d.j.JdbcBufferedConsumerFactory(onStartFunction$lambda$2):246 Preparing raw table in destination started for stream Minio_Source. schema: airbyte_internal, table name: public_raw__stream_minio_source
2024-07-27 02:40:36 [43mdestination[0m > INFO main i.a.c.i.d.j.JdbcBufferedConsumerFactory(onStartFunction$lambda$2):268 Preparing raw tables in destination completed.
2024-07-27 02:40:36 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(prepareFinalTables):154 Preparing tables
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(prepareTablesFuture$lambda$4):229 Final Table does not exist for stream Minio_Source, creating.
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):171 Executing sql cfe78dad-f507-45d7-94ed-bc48ede7f120-f252a0fe-89d4-4c9c-b8e0-849f24db0167: create table "public"."Minio_Source" ("CIK" bigint, "Low" decimal(38, 9), "ask" decimal(38, 9), "bid" decimal(38, 9), "High" decimal(38, 9), "Open" decimal(38, 9), "beta" decimal(38, 9), "open" decimal(38, 9), "Close" decimal(38, 9), "Symbol" varchar, "Volume" bigint, "dayLow" decimal(38, 9), "ebitda" decimal(38, 9), "ticker" varchar, "volume" bigint, "Founded" varchar, "dayHigh" decimal(38, 9), "Security" varchar, "currency" varchar, "pegRatio" decimal(38, 9), "Adj_Close" decimal(38, 9), "bookValue" decimal(38, 9), "forwardPE" decimal(38, 9), "marketCap" bigint, "totalCash" decimal(38, 9), "totalDebt" decimal(38, 9), "Date_added" varchar, "forwardEps" decimal(38, 9), "quickRatio" decimal(38, 9), "shortRatio" decimal(38, 9), "trailingPE" decimal(38, 9), "GICS_Sector" varchar, "floatShares" bigint, "payoutRatio" decimal(38, 9), "priceToBook" decimal(38, 9), "sharesShort" decimal(38, 9), "trailingEps" decimal(38, 9), "52WeekChange" decimal(38, 9), "AsOfDataTime" timestamp with time zone, "currentPrice" decimal(38, 9), "currentRatio" decimal(38, 9), "debtToEquity" decimal(38, 9), "dividendRate" decimal(38, 9), "freeCashflow" decimal(38, 9), "grossMargins" decimal(38, 9), "totalRevenue" bigint, "averageVolume" bigint, "dividendYield" decimal(38, 9), "ebitdaMargins" decimal(38, 9), "previousClose" decimal(38, 9), "profitMargins" decimal(38, 9), "revenueGrowth" decimal(38, 9), "earningsGrowth" decimal(38, 9), "returnOnAssets" decimal(38, 9), "returnOnEquity" decimal(38, 9), "targetLowPrice" decimal(38, 9), "enterpriseValue" decimal(38, 9), "fiftyDayAverage" decimal(38, 9), "fiftyTwoWeekLow" decimal(38, 9), "revenuePerShare" decimal(38, 9), "targetHighPrice" decimal(38, 9), "targetMeanPrice" decimal(38, 9), "fiftyTwoWeekHigh" decimal(38, 9), "lastDividendDate" decimal(38, 9), "operatingMargins" decimal(38, 9), "trailingPegRatio" decimal(38, 9), "GICS_Sub_Industry" varchar, "SandP52WeekChange" decimal(38, 9), "lastDividendValue" decimal(38, 9), "netIncomeToCommon" bigint, "operatingCashflow" decimal(38, 9), "regularMarketOpen" decimal(38, 9), "sharesOutstanding" bigint, "targetMedianPrice" decimal(38, 9), "totalCashPerShare" decimal(38, 9), "enterpriseToEbitda" decimal(38, 9), "recommendationMean" decimal(38, 9), "_ab_source_file_url" varchar, "averageVolume10days" bigint, "enterpriseToRevenue" decimal(38, 9), "heldPercentInsiders" decimal(38, 9), "regularMarketDayLow" decimal(38, 9), "regularMarketVolume" bigint, "shortPercentOfFloat" decimal(38, 9), "regularMarketDayHigh" decimal(38, 9), "twoHundredDayAverage" decimal(38, 9), "Headquarters_Location" varchar, "sharesShortPriorMonth" decimal(38, 9), "sharesPercentSharesOut" decimal(38, 9), "averageDailyVolume10Day" bigint, "earningsQuarterlyGrowth" decimal(38, 9), "heldPercentInstitutions" decimal(38, 9), "regularMarketPreviousClose" decimal(38, 9), "trailingAnnualDividendRate" decimal(38, 9), "trailingAnnualDividendYield" decimal(38, 9), "priceToSalesTrailing12Months" decimal(38, 9), "_ab_source_file_last_modified" varchar, "_airbyte_raw_id" varchar(36) not null, "_airbyte_extracted_at" timestamp with time zone not null, "_airbyte_meta" jsonb not null);
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):186 Sql cfe78dad-f507-45d7-94ed-bc48ede7f120-f252a0fe-89d4-4c9c-b8e0-849f24db0167 completed in 50 ms
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):171 Executing sql cfe78dad-f507-45d7-94ed-bc48ede7f120-1a38acec-8c6e-47ff-82e9-54649924bf70: create index on "public"."Minio_Source"("_airbyte_extracted_at");
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):186 Sql cfe78dad-f507-45d7-94ed-bc48ede7f120-1a38acec-8c6e-47ff-82e9-54649924bf70 completed in 25 ms
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):171 Executing sql cfe78dad-f507-45d7-94ed-bc48ede7f120-3b8419b0-d150-49e7-a0ac-d730ce6c954d: create index on "public"."Minio_Source"("_airbyte_raw_id");
2024-07-27 02:40:36 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):186 Sql cfe78dad-f507-45d7-94ed-bc48ede7f120-3b8419b0-d150-49e7-a0ac-d730ce6c954d completed in 27 ms
2024-07-27 02:40:39 [44msource[0m > Received 3 objects from S3 for prefix 'None'.
2024-07-27 02:40:39 [44msource[0m > Finished listing objects from S3 for prefix=None. Found 3 objects.
2024-07-27 02:40:39 [44msource[0m > Finished listing objects from S3. Found 3 objects total (3 unique objects).
2024-07-27 02:40:58 [44msource[0m > Starting syncing
2024-07-27 02:40:58 [44msource[0m > Received 3 objects from S3 for prefix 'None'.
2024-07-27 02:40:58 [44msource[0m > Marking stream Minio_Source as STARTED
2024-07-27 02:40:58 [44msource[0m > Syncing stream: Minio_Source 
2024-07-27 02:40:58 [46mplatform[0m > Attempt 0 to stream status running null:Minio_Source
2024-07-27 02:41:05 [44msource[0m > Marking stream Minio_Source as RUNNING
2024-07-27 02:41:05 [46mplatform[0m > Attempt 0 to update stream status running null:Minio_Source
2024-07-27 02:41:29 [46mplatform[0m > Records read: 5000 (1 MB)
2024-07-27 02:41:34 [46mplatform[0m > Records read: 10000 (2 MB)
2024-07-27 02:41:35 [43mdestination[0m > INFO pool-3-thread-1 i.a.c.i.d.a.b.BufferManager(printQueueInfo):89 [ASYNC QUEUE INFO] Global: max: 296.96 MB, allocated: 20 MB (20.0 MB), %% used: 0.0673485710340243 | Queue `Minio_Source`, num records: 11201, num bytes: 4.81 MB, allocated bytes: 10 MB | State Manager memory usage: Allocated: 10 MB, Used: 0 bytes, percentage Used 0.0
2024-07-27 02:41:35 [43mdestination[0m > INFO pool-6-thread-1 i.a.c.i.d.a.FlushWorkers(printWorkerInfo):128 [ASYNC WORKER INFO] Pool queue size: 0, Active threads: 0
2024-07-27 02:41:38 [46mplatform[0m > Records read: 15000 (4 MB)
2024-07-27 02:41:43 [46mplatform[0m > Records read: 20000 (5 MB)
2024-07-27 02:41:48 [46mplatform[0m > Records read: 25000 (6 MB)
2024-07-27 02:41:53 [46mplatform[0m > Records read: 30000 (8 MB)
2024-07-27 02:41:58 [46mplatform[0m > Records read: 35000 (9 MB)
2024-07-27 02:42:03 [46mplatform[0m > Records read: 40000 (10 MB)
2024-07-27 02:42:08 [46mplatform[0m > Records read: 45000 (12 MB)
2024-07-27 02:42:13 [46mplatform[0m > Records read: 50000 (13 MB)
2024-07-27 02:42:18 [46mplatform[0m > Records read: 55000 (14 MB)
2024-07-27 02:42:22 [43mdestination[0m > INFO pool-5-thread-1 i.a.c.i.d.a.DetectStreamToFlush(getNextStreamToFlush):110 flushing: trigger info: public - Minio_Source, time trigger: false , size trigger: true current threshold b: 25 MB, queue size b: 25.18 MB, penalty b: 0 bytes, after penalty b: 25.18 MB
2024-07-27 02:42:22 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):136 Flush Worker (ac4be) -- Worker picked up work.
2024-07-27 02:42:22 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):142 Flush Worker (ac4be) -- Attempting to read from queue namespace: public, stream: Minio_Source.
2024-07-27 02:42:22 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):164 Flush Worker (ac4be) -- Batch contains: 58537 records, 25 MB bytes.
2024-07-27 02:42:23 [46mplatform[0m > Records read: 60000 (16 MB)
2024-07-27 02:42:28 [46mplatform[0m > Records read: 65000 (17 MB)
2024-07-27 02:42:31 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):155 Flushing states
2024-07-27 02:42:31 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):209 Flushing states complete
2024-07-27 02:42:31 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 0 bytes..
2024-07-27 02:42:31 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 26214219 bytes..
2024-07-27 02:42:31 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):182 Flush Worker (ac4be) -- Worker finished flushing. Current queue size: 8919
2024-07-27 02:42:34 [46mplatform[0m > Records read: 70000 (18 MB)
2024-07-27 02:42:35 [43mdestination[0m > INFO pool-3-thread-1 i.a.c.i.d.a.b.BufferManager(printQueueInfo):89 [ASYNC QUEUE INFO] Global: max: 296.96 MB, allocated: 25 MB (25.00017261505127 MB), %% used: 0.08418629506138248 | Queue `Minio_Source`, num records: 12613, num bytes: 5.39 MB, allocated bytes: 15 MB | State Manager memory usage: Allocated: 10 MB, Used: 0 bytes, percentage Used 0.0
2024-07-27 02:42:35 [43mdestination[0m > INFO pool-6-thread-1 i.a.c.i.d.a.FlushWorkers(printWorkerInfo):128 [ASYNC WORKER INFO] Pool queue size: 0, Active threads: 0
2024-07-27 02:42:38 [46mplatform[0m > Records read: 75000 (20 MB)
2024-07-27 02:42:43 [46mplatform[0m > Records read: 80000 (21 MB)
2024-07-27 02:42:48 [46mplatform[0m > Records read: 85000 (22 MB)
2024-07-27 02:42:53 [46mplatform[0m > Records read: 90000 (24 MB)
2024-07-27 02:42:58 [46mplatform[0m > Records read: 95000 (25 MB)
2024-07-27 02:43:03 [46mplatform[0m > Records read: 100000 (26 MB)
2024-07-27 02:43:08 [46mplatform[0m > Records read: 105000 (28 MB)
2024-07-27 02:43:13 [46mplatform[0m > Records read: 110000 (29 MB)
2024-07-27 02:43:17 [46mplatform[0m > Records read: 115000 (30 MB)
2024-07-27 02:43:19 [43mdestination[0m > INFO pool-5-thread-1 i.a.c.i.d.a.DetectStreamToFlush(getNextStreamToFlush):110 flushing: trigger info: public - Minio_Source, time trigger: false , size trigger: true current threshold b: 25 MB, queue size b: 25.18 MB, penalty b: 0 bytes, after penalty b: 25.18 MB
2024-07-27 02:43:19 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):136 Flush Worker (2f950) -- Worker picked up work.
2024-07-27 02:43:19 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):142 Flush Worker (2f950) -- Attempting to read from queue namespace: public, stream: Minio_Source.
2024-07-27 02:43:19 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):164 Flush Worker (2f950) -- Batch contains: 58616 records, 25 MB bytes.
2024-07-27 02:43:20 [46mplatform[0m > Records read: 120000 (32 MB)
2024-07-27 02:43:23 [46mplatform[0m > Records read: 125000 (33 MB)
2024-07-27 02:43:25 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):155 Flushing states
2024-07-27 02:43:25 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):209 Flushing states complete
2024-07-27 02:43:25 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 0 bytes..
2024-07-27 02:43:25 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 26214180 bytes..
2024-07-27 02:43:25 [43mdestination[0m > INFO pool-4-thread-2 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):182 Flush Worker (2f950) -- Worker finished flushing. Current queue size: 8058
2024-07-27 02:43:35 [43mdestination[0m > INFO pool-3-thread-1 i.a.c.i.d.a.b.BufferManager(printQueueInfo):89 [ASYNC QUEUE INFO] Global: max: 296.96 MB, allocated: 20 MB (20.00038242340088 MB), %% used: 0.06734985881750326 | Queue `Minio_Source`, num records: 8058, num bytes: 3.44 MB, allocated bytes: 10 MB | State Manager memory usage: Allocated: 10 MB, Used: 0 bytes, percentage Used 0.0
2024-07-27 02:43:35 [43mdestination[0m > INFO pool-6-thread-1 i.a.c.i.d.a.FlushWorkers(printWorkerInfo):128 [ASYNC WORKER INFO] Pool queue size: 0, Active threads: 0
2024-07-27 02:43:57 [44msource[0m > Read 125733 records from Minio_Source stream
2024-07-27 02:43:57 [44msource[0m > Marking stream Minio_Source as STOPPED
2024-07-27 02:43:57 [44msource[0m > Finished syncing Minio_Source
2024-07-27 02:43:57 [44msource[0m > Finished syncing
2024-07-27 02:43:57 [46mplatform[0m > Source state message checksum is valid for stream _Minio_Source.
2024-07-27 02:43:57 [46mplatform[0m > SOURCE analytics [airbyte/source-s3:4.5.14] | Type: file-cdk-parquet-stream-count | Value: 1
2024-07-27 02:43:58 [46mplatform[0m > Total records read: 125738 (34 MB)
2024-07-27 02:43:58 [46mplatform[0m > Schema validation was performed to a max of 10 records with errors per stream.
2024-07-27 02:43:58 [46mplatform[0m > Schema validation errors found for stream _Minio_Source. Error messages: [$.AsOfDataTime: 2024-07-24T14:42:10.593796 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:08.275894 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:10.936724 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:15.912967 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:16.504283 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:12.023610 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:13.781488 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:13.166726 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:08.584040 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:14.377141 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:12.391709 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:09.460498 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:16.219258 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:09.166634 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:13.453012 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:15.577192 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:14.087843 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:14.706567 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:12.764339 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:14.990164 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:10.174421 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:08.869778 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:11.672857 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:11.249312 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:09.778757 is an invalid date-time, $.AsOfDataTime: 2024-07-24T14:42:15.266954 is an invalid date-time]
2024-07-27 02:43:58 [46mplatform[0m > readFromSource: done. (source.isFinished:true, fromSource.isClosed:false)
2024-07-27 02:43:58 [46mplatform[0m > thread status... heartbeat thread: false , replication thread: true
2024-07-27 02:43:58 [46mplatform[0m > processMessage: done. (fromSource.isDone:true, forDest.isClosed:false)
2024-07-27 02:43:58 [46mplatform[0m > writeToDestination: done. (forDest.isDone:true, isDestRunning:true)
2024-07-27 02:43:58 [46mplatform[0m > thread status... timeout thread: false , replication thread: true
2024-07-27 02:43:58 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner$Companion(consumeWriteStream$io_airbyte_airbyte_cdk_java_airbyte_cdk_airbyte_cdk_core):429 Finished buffered read of input stream
2024-07-27 02:43:58 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):205 Closing flush workers -- waiting for all buffers to flush
2024-07-27 02:43:58 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):249 REMAINING_BUFFERS_INFO
  Namespace: public Stream: Minio_Source -- remaining records: 8580
2024-07-27 02:43:58 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):250 Waiting for all streams to flush.
2024-07-27 02:43:59 [43mdestination[0m > INFO pool-5-thread-1 i.a.c.i.d.a.DetectStreamToFlush(getNextStreamToFlush):110 flushing: trigger info: public - Minio_Source, time trigger: false , size trigger: true current threshold b: 0 bytes, queue size b: 4.56 MB, penalty b: 0 bytes, after penalty b: 4.56 MB
2024-07-27 02:43:59 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):136 Flush Worker (74b28) -- Worker picked up work.
2024-07-27 02:43:59 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):142 Flush Worker (74b28) -- Attempting to read from queue namespace: public, stream: Minio_Source.
2024-07-27 02:43:59 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 5702386 bytes..
2024-07-27 02:43:59 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):164 Flush Worker (74b28) -- Batch contains: 8580 records, 4.56 MB bytes.
2024-07-27 02:43:59 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):253 Closing flush workers -- all buffers flushed
2024-07-27 02:43:59 [43mdestination[0m > INFO main i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):155 Flushing states
2024-07-27 02:43:59 [43mdestination[0m > INFO main i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):209 Flushing states complete
2024-07-27 02:43:59 [43mdestination[0m > INFO main i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 0 bytes..
2024-07-27 02:43:59 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):261 Closing flush workers -- supervisor shut down
2024-07-27 02:43:59 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):263 Closing flush workers -- Starting worker pool shutdown..
2024-07-27 02:44:00 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):155 Flushing states
2024-07-27 02:44:00 [46mplatform[0m > Destination state message checksum is valid for stream _Minio_Source.
2024-07-27 02:44:01 [46mplatform[0m > starting state flush thread for connectionId ef63f0c7-ce60-4760-b6c7-f8a861b08f9a
2024-07-27 02:44:01 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.s.GlobalAsyncStateManager(flushStates):209 Flushing states complete
2024-07-27 02:44:01 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 276 bytes..
2024-07-27 02:44:01 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.GlobalMemoryManager(free):78 Freeing 4783775 bytes..
2024-07-27 02:44:01 [43mdestination[0m > INFO pool-4-thread-1 i.a.c.i.d.a.FlushWorkers(flush$lambda$6):182 Flush Worker (74b28) -- Worker finished flushing. Current queue size: 0
2024-07-27 02:44:01 [43mdestination[0m > INFO main i.a.c.i.d.a.FlushWorkers(close):268 Closing flush workers  -- workers shut down
2024-07-27 02:44:01 [43mdestination[0m > INFO main i.a.c.i.d.a.b.BufferManager(close):68 Buffers cleared..
2024-07-27 02:44:01 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(typeAndDedupe):381 Typing and deduping all tables
2024-07-27 02:44:01 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(typeAndDedupeTask$lambda$5):333 Waiting for raw table writes to pause for public.Minio_Source
2024-07-27 02:44:01 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.TypeAndDedupeTransaction(executeTypeAndDedupe):37 Attempting typing and deduping for public.Minio_Source with suffix 
2024-07-27 02:44:01 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):171 Executing sql f6259a83-dca3-4a5f-9d13-480fbe6e3da9-54811f7d-598f-4665-bf09-b631108f698a: insert into "public"."Minio_Source" ("CIK", "Low", "ask", "bid", "High", "Open", "beta", "open", "Close", "Symbol", "Volume", "dayLow", "ebitda", "ticker", "volume", "Founded", "dayHigh", "Security", "currency", "pegRatio", "Adj_Close", "bookValue", "forwardPE", "marketCap", "totalCash", "totalDebt", "Date_added", "forwardEps", "quickRatio", "shortRatio", "trailingPE", "GICS_Sector", "floatShares", "payoutRatio", "priceToBook", "sharesShort", "trailingEps", "52WeekChange", "AsOfDataTime", "currentPrice", "currentRatio", "debtToEquity", "dividendRate", "freeCashflow", "grossMargins", "totalRevenue", "averageVolume", "dividendYield", "ebitdaMargins", "previousClose", "profitMargins", "revenueGrowth", "earningsGrowth", "returnOnAssets", "returnOnEquity", "targetLowPrice", "enterpriseValue", "fiftyDayAverage", "fiftyTwoWeekLow", "revenuePerShare", "targetHighPrice", "targetMeanPrice", "fiftyTwoWeekHigh", "lastDividendDate", "operatingMargins", "trailingPegRatio", "GICS_Sub_Industry", "SandP52WeekChange", "lastDividendValue", "netIncomeToCommon", "operatingCashflow", "regularMarketOpen", "sharesOutstanding", "targetMedianPrice", "totalCashPerShare", "enterpriseToEbitda", "recommendationMean", "_ab_source_file_url", "averageVolume10days", "enterpriseToRevenue", "heldPercentInsiders", "regularMarketDayLow", "regularMarketVolume", "shortPercentOfFloat", "regularMarketDayHigh", "twoHundredDayAverage", "Headquarters_Location", "sharesShortPriorMonth", "sharesPercentSharesOut", "averageDailyVolume10Day", "earningsQuarterlyGrowth", "heldPercentInstitutions", "regularMarketPreviousClose", "trailingAnnualDividendRate", "trailingAnnualDividendYield", "priceToSalesTrailing12Months", "_ab_source_file_last_modified", "_airbyte_raw_id", "_airbyte_extracted_at", "_airbyte_meta") with "intermediate_data" as (select cast(case when ("_airbyte_data" -> 'CIK' is null or JSONB_TYPEOF("_airbyte_data" -> 'CIK') = 'null') then null else cast("_airbyte_data" -> 'CIK' as varchar) end as bigint) as "CIK", cast(case when ("_airbyte_data" -> 'Low' is null or JSONB_TYPEOF("_airbyte_data" -> 'Low') = 'null') then null else cast("_airbyte_data" -> 'Low' as varchar) end as decimal(38, 9)) as "Low", cast(case when ("_airbyte_data" -> 'ask' is null or JSONB_TYPEOF("_airbyte_data" -> 'ask') = 'null') then null else cast("_airbyte_data" -> 'ask' as varchar) end as decimal(38, 9)) as "ask", cast(case when ("_airbyte_data" -> 'bid' is null or JSONB_TYPEOF("_airbyte_data" -> 'bid') = 'null') then null else cast("_airbyte_data" -> 'bid' as varchar) end as decimal(38, 9)) as "bid", cast(case when ("_airbyte_data" -> 'High' is null or JSONB_TYPEOF("_airbyte_data" -> 'High') = 'null') then null else cast("_airbyte_data" -> 'High' as varchar) end as decimal(38, 9)) as "High", cast(case when ("_airbyte_data" -> 'Open' is null or JSONB_TYPEOF("_airbyte_data" -> 'Open') = 'null') then null else cast("_airbyte_data" -> 'Open' as varchar) end as decimal(38, 9)) as "Open", cast(case when ("_airbyte_data" -> 'beta' is null or JSONB_TYPEOF("_airbyte_data" -> 'beta') = 'null') then null else cast("_airbyte_data" -> 'beta' as varchar) end as decimal(38, 9)) as "beta", cast(case when ("_airbyte_data" -> 'open' is null or JSONB_TYPEOF("_airbyte_data" -> 'open') = 'null') then null else cast("_airbyte_data" -> 'open' as varchar) end as decimal(38, 9)) as "open", cast(case when ("_airbyte_data" -> 'Close' is null or JSONB_TYPEOF("_airbyte_data" -> 'Close') = 'null') then null else cast("_airbyte_data" -> 'Close' as varchar) end as decimal(38, 9)) as "Close", "_airbyte_data" -> 'Symbol' #>> '{}' as "Symbol", cast(case when ("_airbyte_data" -> 'Volume' is null or JSONB_TYPEOF("_airbyte_data" -> 'Volume') = 'null') then null else cast("_airbyte_data" -> 'Volume' as varchar) end as bigint) as "Volume", cast(case when ("_airbyte_data" -> 'dayLow' is null or JSONB_TYPEOF("_airbyte_data" -> 'dayLow') = 'null') then null else cast("_airbyte_data" -> 'dayLow' as varchar) end as decimal(38, 9)) as "dayLow", cast(case when ("_airbyte_data" -> 'ebitda' is null or JSONB_TYPEOF("_airbyte_data" -> 'ebitda') = 'null') then null else cast("_airbyte_data" -> 'ebitda' as varchar) end as decimal(38, 9)) as "ebitda", "_airbyte_data" -> 'ticker' #>> '{}' as "ticker", cast(case when ("_airbyte_data" -> 'volume' is null or JSONB_TYPEOF("_airbyte_data" -> 'volume') = 'null') then null else cast("_airbyte_data" -> 'volume' as varchar) end as bigint) as "volume", "_airbyte_data" -> 'Founded' #>> '{}' as "Founded", cast(case when ("_airbyte_data" -> 'dayHigh' is null or JSONB_TYPEOF("_airbyte_data" -> 'dayHigh') = 'null') then null else cast("_airbyte_data" -> 'dayHigh' as varchar) end as decimal(38, 9)) as "dayHigh", "_airbyte_data" -> 'Security' #>> '{}' as "Security", "_airbyte_data" -> 'currency' #>> '{}' as "currency", cast(case when ("_airbyte_data" -> 'pegRatio' is null or JSONB_TYPEOF("_airbyte_data" -> 'pegRatio') = 'null') then null else cast("_airbyte_data" -> 'pegRatio' as varchar) end as decimal(38, 9)) as "pegRatio", cast(case when ("_airbyte_data" -> 'Adj Close' is null or JSONB_TYPEOF("_airbyte_data" -> 'Adj Close') = 'null') then null else cast("_airbyte_data" -> 'Adj Close' as varchar) end as decimal(38, 9)) as "Adj_Close", cast(case when ("_airbyte_data" -> 'bookValue' is null or JSONB_TYPEOF("_airbyte_data" -> 'bookValue') = 'null') then null else cast("_airbyte_data" -> 'bookValue' as varchar) end as decimal(38, 9)) as "bookValue", cast(case when ("_airbyte_data" -> 'forwardPE' is null or JSONB_TYPEOF("_airbyte_data" -> 'forwardPE') = 'null') then null else cast("_airbyte_data" -> 'forwardPE' as varchar) end as decimal(38, 9)) as "forwardPE", cast(case when ("_airbyte_data" -> 'marketCap' is null or JSONB_TYPEOF("_airbyte_data" -> 'marketCap') = 'null') then null else cast("_airbyte_data" -> 'marketCap' as varchar) end as bigint) as "marketCap", cast(case when ("_airbyte_data" -> 'totalCash' is null or JSONB_TYPEOF("_airbyte_data" -> 'totalCash') = 'null') then null else cast("_airbyte_data" -> 'totalCash' as varchar) end as decimal(38, 9)) as "totalCash", cast(case when ("_airbyte_data" -> 'totalDebt' is null or JSONB_TYPEOF("_airbyte_data" -> 'totalDebt') = 'null') then null else cast("_airbyte_data" -> 'totalDebt' as varchar) end as decimal(38, 9)) as "totalDebt", "_airbyte_data" -> 'Date added' #>> '{}' as "Date_added", cast(case when ("_airbyte_data" -> 'forwardEps' is null or JSONB_TYPEOF("_airbyte_data" -> 'forwardEps') = 'null') then null else cast("_airbyte_data" -> 'forwardEps' as varchar) end as decimal(38, 9)) as "forwardEps", cast(case when ("_airbyte_data" -> 'quickRatio' is null or JSONB_TYPEOF("_airbyte_data" -> 'quickRatio') = 'null') then null else cast("_airbyte_data" -> 'quickRatio' as varchar) end as decimal(38, 9)) as "quickRatio", cast(case when ("_airbyte_data" -> 'shortRatio' is null or JSONB_TYPEOF("_airbyte_data" -> 'shortRatio') = 'null') then null else cast("_airbyte_data" -> 'shortRatio' as varchar) end as decimal(38, 9)) as "shortRatio", cast(case when ("_airbyte_data" -> 'trailingPE' is null or JSONB_TYPEOF("_airbyte_data" -> 'trailingPE') = 'null') then null else cast("_airbyte_data" -> 'trailingPE' as varchar) end as decimal(38, 9)) as "trailingPE", "_airbyte_data" -> 'GICS Sector' #>> '{}' as "GICS_Sector", cast(case when ("_airbyte_data" -> 'floatShares' is null or JSONB_TYPEOF("_airbyte_data" -> 'floatShares') = 'null') then null else cast("_airbyte_data" -> 'floatShares' as varchar) end as bigint) as "floatShares", cast(case when ("_airbyte_data" -> 'payoutRatio' is null or JSONB_TYPEOF("_airbyte_data" -> 'payoutRatio') = 'null') then null else cast("_airbyte_data" -> 'payoutRatio' as varchar) end as decimal(38, 9)) as "payoutRatio", cast(case when ("_airbyte_data" -> 'priceToBook' is null or JSONB_TYPEOF("_airbyte_data" -> 'priceToBook') = 'null') then null else cast("_airbyte_data" -> 'priceToBook' as varchar) end as decimal(38, 9)) as "priceToBook", cast(case when ("_airbyte_data" -> 'sharesShort' is null or JSONB_TYPEOF("_airbyte_data" -> 'sharesShort') = 'null') then null else cast("_airbyte_data" -> 'sharesShort' as varchar) end as decimal(38, 9)) as "sharesShort", cast(case when ("_airbyte_data" -> 'trailingEps' is null or JSONB_TYPEOF("_airbyte_data" -> 'trailingEps') = 'null') then null else cast("_airbyte_data" -> 'trailingEps' as varchar) end as decimal(38, 9)) as "trailingEps", cast(case when ("_airbyte_data" -> '52WeekChange' is null or JSONB_TYPEOF("_airbyte_data" -> '52WeekChange') = 'null') then null else cast("_airbyte_data" -> '52WeekChange' as varchar) end as decimal(38, 9)) as "52WeekChange", cast(case when ("_airbyte_data" -> 'AsOfDataTime' is null or JSONB_TYPEOF("_airbyte_data" -> 'AsOfDataTime') = 'null') then null else cast("_airbyte_data" -> 'AsOfDataTime' as varchar) end as timestamp with time zone) as "AsOfDataTime", cast(case when ("_airbyte_data" -> 'currentPrice' is null or JSONB_TYPEOF("_airbyte_data" -> 'currentPrice') = 'null') then null else cast("_airbyte_data" -> 'currentPrice' as varchar) end as decimal(38, 9)) as "currentPrice", cast(case when ("_airbyte_data" -> 'currentRatio' is null or JSONB_TYPEOF("_airbyte_data" -> 'currentRatio') = 'null') then null else cast("_airbyte_data" -> 'currentRatio' as varchar) end as decimal(38, 9)) as "currentRatio", cast(case when ("_airbyte_data" -> 'debtToEquity' is null or JSONB_TYPEOF("_airbyte_data" -> 'debtToEquity') = 'null') then null else cast("_airbyte_data" -> 'debtToEquity' as varchar) end as decimal(38, 9)) as "debtToEquity", cast(case when ("_airbyte_data" -> 'dividendRate' is null or JSONB_TYPEOF("_airbyte_data" -> 'dividendRate') = 'null') then null else cast("_airbyte_data" -> 'dividendRate' as varchar) end as decimal(38, 9)) as "dividendRate", cast(case when ("_airbyte_data" -> 'freeCashflow' is null or JSONB_TYPEOF("_airbyte_data" -> 'freeCashflow') = 'null') then null else cast("_airbyte_data" -> 'freeCashflow' as varchar) end as decimal(38, 9)) as "freeCashflow", cast(case when ("_airbyte_data" -> 'grossMargins' is null or JSONB_TYPEOF("_airbyte_data" -> 'grossMargins') = 'null') then null else cast("_airbyte_data" -> 'grossMargins' as varchar) end as decimal(38, 9)) as "grossMargins", cast(case when ("_airbyte_data" -> 'totalRevenue' is null or JSONB_TYPEOF("_airbyte_data" -> 'totalRevenue') = 'null') then null else cast("_airbyte_data" -> 'totalRevenue' as varchar) end as bigint) as "totalRevenue", cast(case when ("_airbyte_data" -> 'averageVolume' is null or JSONB_TYPEOF("_airbyte_data" -> 'averageVolume') = 'null') then null else cast("_airbyte_data" -> 'averageVolume' as varchar) end as bigint) as "averageVolume", cast(case when ("_airbyte_data" -> 'dividendYield' is null or JSONB_TYPEOF("_airbyte_data" -> 'dividendYield') = 'null') then null else cast("_airbyte_data" -> 'dividendYield' as varchar) end as decimal(38, 9)) as "dividendYield", cast(case when ("_airbyte_data" -> 'ebitdaMargins' is null or JSONB_TYPEOF("_airbyte_data" -> 'ebitdaMargins') = 'null') then null else cast("_airbyte_data" -> 'ebitdaMargins' as varchar) end as decimal(38, 9)) as "ebitdaMargins", cast(case when ("_airbyte_data" -> 'previousClose' is null or JSONB_TYPEOF("_airbyte_data" -> 'previousClose') = 'null') then null else cast("_airbyte_data" -> 'previousClose' as varchar) end as decimal(38, 9)) as "previousClose", cast(case when ("_airbyte_data" -> 'profitMargins' is null or JSONB_TYPEOF("_airbyte_data" -> 'profitMargins') = 'null') then null else cast("_airbyte_data" -> 'profitMargins' as varchar) end as decimal(38, 9)) as "profitMargins", cast(case when ("_airbyte_data" -> 'revenueGrowth' is null or JSONB_TYPEOF("_airbyte_data" -> 'revenueGrowth') = 'null') then null else cast("_airbyte_data" -> 'revenueGrowth' as varchar) end as decimal(38, 9)) as "revenueGrowth", cast(case when ("_airbyte_data" -> 'earningsGrowth' is null or JSONB_TYPEOF("_airbyte_data" -> 'earningsGrowth') = 'null') then null else cast("_airbyte_data" -> 'earningsGrowth' as varchar) end as decimal(38, 9)) as "earningsGrowth", cast(case when ("_airbyte_data" -> 'returnOnAssets' is null or JSONB_TYPEOF("_airbyte_data" -> 'returnOnAssets') = 'null') then null else cast("_airbyte_data" -> 'returnOnAssets' as varchar) end as decimal(38, 9)) as "returnOnAssets", cast(case when ("_airbyte_data" -> 'returnOnEquity' is null or JSONB_TYPEOF("_airbyte_data" -> 'returnOnEquity') = 'null') then null else cast("_airbyte_data" -> 'returnOnEquity' as varchar) end as decimal(38, 9)) as "returnOnEquity", cast(case when ("_airbyte_data" -> 'targetLowPrice' is null or JSONB_TYPEOF("_airbyte_data" -> 'targetLowPrice') = 'null') then null else cast("_airbyte_data" -> 'targetLowPrice' as varchar) end as decimal(38, 9)) as "targetLowPrice", cast(case when ("_airbyte_data" -> 'enterpriseValue' is null or JSONB_TYPEOF("_airbyte_data" -> 'enterpriseValue') = 'null') then null else cast("_airbyte_data" -> 'enterpriseValue' as varchar) end as decimal(38, 9)) as "enterpriseValue", cast(case when ("_airbyte_data" -> 'fiftyDayAverage' is null or JSONB_TYPEOF("_airbyte_data" -> 'fiftyDayAverage') = 'null') then null else cast("_airbyte_data" -> 'fiftyDayAverage' as varchar) end as decimal(38, 9)) as "fiftyDayAverage", cast(case when ("_airbyte_data" -> 'fiftyTwoWeekLow' is null or JSONB_TYPEOF("_airbyte_data" -> 'fiftyTwoWeekLow') = 'null') then null else cast("_airbyte_data" -> 'fiftyTwoWeekLow' as varchar) end as decimal(38, 9)) as "fiftyTwoWeekLow", cast(case when ("_airbyte_data" -> 'revenuePerShare' is null or JSONB_TYPEOF("_airbyte_data" -> 'revenuePerShare') = 'null') then null else cast("_airbyte_data" -> 'revenuePerShare' as varchar) end as decimal(38, 9)) as "revenuePerShare", cast(case when ("_airbyte_data" -> 'targetHighPrice' is null or JSONB_TYPEOF("_airbyte_data" -> 'targetHighPrice') = 'null') then null else cast("_airbyte_data" -> 'targetHighPrice' as varchar) end as decimal(38, 9)) as "targetHighPrice", cast(case when ("_airbyte_data" -> 'targetMeanPrice' is null or JSONB_TYPEOF("_airbyte_data" -> 'targetMeanPrice') = 'null') then null else cast("_airbyte_data" -> 'targetMeanPrice' as varchar) end as decimal(38, 9)) as "targetMeanPrice", cast(case when ("_airbyte_data" -> 'fiftyTwoWeekHigh' is null or JSONB_TYPEOF("_airbyte_data" -> 'fiftyTwoWeekHigh') = 'null') then null else cast("_airbyte_data" -> 'fiftyTwoWeekHigh' as varchar) end as decimal(38, 9)) as "fiftyTwoWeekHigh", cast(case when ("_airbyte_data" -> 'lastDividendDate' is null or JSONB_TYPEOF("_airbyte_data" -> 'lastDividendDate') = 'null') then null else cast("_airbyte_data" -> 'lastDividendDate' as varchar) end as decimal(38, 9)) as "lastDividendDate", cast(case when ("_airbyte_data" -> 'operatingMargins' is null or JSONB_TYPEOF("_airbyte_data" -> 'operatingMargins') = 'null') then null else cast("_airbyte_data" -> 'operatingMargins' as varchar) end as decimal(38, 9)) as "operatingMargins", cast(case when ("_airbyte_data" -> 'trailingPegRatio' is null or JSONB_TYPEOF("_airbyte_data" -> 'trailingPegRatio') = 'null') then null else cast("_airbyte_data" -> 'trailingPegRatio' as varchar) end as decimal(38, 9)) as "trailingPegRatio", "_airbyte_data" -> 'GICS Sub-Industry' #>> '{}' as "GICS_Sub_Industry", cast(case when ("_airbyte_data" -> 'SandP52WeekChange' is null or JSONB_TYPEOF("_airbyte_data" -> 'SandP52WeekChange') = 'null') then null else cast("_airbyte_data" -> 'SandP52WeekChange' as varchar) end as decimal(38, 9)) as "SandP52WeekChange", cast(case when ("_airbyte_data" -> 'lastDividendValue' is null or JSONB_TYPEOF("_airbyte_data" -> 'lastDividendValue') = 'null') then null else cast("_airbyte_data" -> 'lastDividendValue' as varchar) end as decimal(38, 9)) as "lastDividendValue", cast(case when ("_airbyte_data" -> 'netIncomeToCommon' is null or JSONB_TYPEOF("_airbyt…
2024-07-27 02:44:51 [43mdestination[0m > INFO type-and-dedupe i.a.c.i.d.j.t.JdbcDestinationHandler(execute):186 Sql f6259a83-dca3-4a5f-9d13-480fbe6e3da9-54811f7d-598f-4665-bf09-b631108f698a completed in 50579 ms
2024-07-27 02:44:52 [43mdestination[0m > INFO type-and-dedupe i.a.i.b.d.t.DefaultTyperDeduper(typeAndDedupeTask$lambda$5):351 Allowing other threads to proceed for public.Minio_Source
2024-07-27 02:44:52 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(commitFinalTables):437 Committing final tables
2024-07-27 02:44:52 [43mdestination[0m > INFO main i.a.i.b.d.t.DefaultTyperDeduper(cleanup):501 Cleaning Up type-and-dedupe thread pool
2024-07-27 02:44:52 [43mdestination[0m > INFO main i.a.c.i.d.a.AsyncStreamConsumer(close):179 class io.airbyte.cdk.integrations.destination.async.AsyncStreamConsumer closed
2024-07-27 02:44:52 [43mdestination[0m > INFO main i.a.c.i.b.IntegrationRunner(runInternal):251 Completed integration: io.airbyte.cdk.integrations.base.ssh.SshWrappedDestination
2024-07-27 02:44:52 [43mdestination[0m > INFO main i.a.i.d.p.PostgresDestination(main):171 completed destination: class io.airbyte.integrations.destination.postgres.PostgresDestination
2024-07-27 02:44:52 [46mplatform[0m > Attempt 0 to update stream status complete null:Minio_Source
2024-07-27 02:44:52 [46mplatform[0m > readFromDestination: done. (writeToDestFailed:false, dest.isFinished:true)
2024-07-27 02:44:52 [46mplatform[0m > thread status... timeout thread: false , replication thread: true
2024-07-27 02:44:52 [46mplatform[0m > sync summary: {
  "status" : "completed",
  "recordsSynced" : 125733,
  "bytesSynced" : 36214760,
  "startTime" : 1722048031748,
  "endTime" : 1722048292702,
  "totalStats" : {
    "bytesCommitted" : 36214760,
    "bytesEmitted" : 36214760,
    "destinationStateMessagesEmitted" : 1,
    "destinationWriteEndTime" : 1722048292647,
    "destinationWriteStartTime" : 1722048031778,
    "meanSecondsBeforeSourceStateMessageEmitted" : 0,
    "maxSecondsBeforeSourceStateMessageEmitted" : 1,
    "maxSecondsBetweenStateMessageEmittedandCommitted" : 3,
    "meanSecondsBetweenStateMessageEmittedandCommitted" : 3,
    "recordsEmitted" : 125733,
    "recordsCommitted" : 125733,
    "replicationEndTime" : 1722048292656,
    "replicationStartTime" : 1722048031748,
    "sourceReadEndTime" : 1722048238466,
    "sourceReadStartTime" : 1722048031780,
    "sourceStateMessagesEmitted" : 1
  },
  "streamStats" : [ {
    "streamName" : "Minio_Source",
    "stats" : {
      "bytesCommitted" : 36214760,
      "bytesEmitted" : 36214760,
      "recordsEmitted" : 125733,
      "recordsCommitted" : 125733
    }
  } ],
  "performanceMetrics" : {
    "processFromSource" : {
      "elapsedTimeInNanos" : 5575138684,
      "executionCount" : 125738,
      "avgExecTimeInNanos" : 44339.33006728276
    },
    "readFromSource" : {
      "elapsedTimeInNanos" : 205749045839,
      "executionCount" : 125739,
      "avgExecTimeInNanos" : 1636318.4520236363
    },
    "processFromDest" : {
      "elapsedTimeInNanos" : 23911310,
      "executionCount" : 1,
      "avgExecTimeInNanos" : 2.391131E7
    },
    "writeToDest" : {
      "elapsedTimeInNanos" : 3190606671,
      "executionCount" : 125734,
      "avgExecTimeInNanos" : 25375.84639795123
    },
    "readFromDest" : {
      "elapsedTimeInNanos" : 260741167041,
      "executionCount" : 39,
      "avgExecTimeInNanos" : 6.685670949769231E9
    }
  }
}
2024-07-27 02:44:52 [46mplatform[0m > failures: [ ]
2024-07-27 02:44:52 [46mplatform[0m > 
2024-07-27 02:44:52 [46mplatform[0m > ----- END REPLICATION -----
2024-07-27 02:44:52 [46mplatform[0m > 



